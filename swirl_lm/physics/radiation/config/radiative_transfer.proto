syntax = "proto2";

package research.simulation;

option java_multiple_files = true;

// Stores the parameters required by the radiation optics library.
// Next id: 6
message RRTMOptics {
  // Path of NetCDF file containing the longwave lookup tables.
  optional string longwave_nc_filepath = 1;
  // Path of NetCDF file containing the shortwave lookup tables.
  optional string shortwave_nc_filepath = 2;
  // Path of NetCDF file containing the cloud longwave lookup table.
  optional string cloud_longwave_nc_filepath = 3;
  // Path of NetCDF file containing the cloud shortwave lookup table.
  optional string cloud_shortwave_nc_filepath = 4;
}

message GrayAtmosphereOptics {
  // Reference surface pressure.
  optional float p0 = 1 [default = 1e5];
  // The ratio of the pressure scale height to the partial-pressure scale height
  // of the infrared absorber.
  optional float alpha = 2 [default = 3.5];
  // Longwave optical depth of the entire gray atmosphere.
  optional float d0_lw = 3;
  // Shortwave optical depth of the entire gray atmosphere.
  optional float d0_sw = 4;
}

message OpticsParameters {
  oneof optics_scheme {
    RRTMOptics rrtm_optics = 1;
    GrayAtmosphereOptics gray_atmosphere_optics = 2;
  }

  // Order of accuracy of face value reconstruction for interpolating pressure
  // or temperature at grid cell boundaries. At least 3-rd order is recommended.
  optional int32 face_interp_scheme_order = 3 [default = 3];
}

message AtmosphericState {
  // Surface emissivity; the same for all bands.
  optional float sfc_emis = 1;
  // Surface albedo; the same for all bands.
  optional float sfc_alb = 2;
  // The solar zenith angle (in radians).
  optional float zenith = 3;
  // The total solar irradiance (in W/m²).
  optional float irrad = 4;
  // The longwave incident flux at the top of the atmosphere (in W/m²).
  optional float toa_flux_lw = 5 [default = 0.0];
  // Path of a csv file containing volume mixing ratio sounding for particular
  // gas species on a uniform log scale pressure grid. One column should be
  // labeled 'p_ref' for the corresponding pressure profile in Pa that will be
  // used when interpolating to the simulation's pressure field. All other
  // columns should be labeled with the chemical formula of the gas they
  // correspond to. Note that the pressure grid under p_ref must be
  // log-uniformly spaced to ensure accurate interpolation of the profiles.
  optional string vmr_sounding_filepath = 6;
  // The path of a json file containing volume mixing ratio global means,
  // indexed by the gas chemical formula. This should be populated by gas
  // species that have little variability in the atmosphere. The contents of the
  // file should be a dictionary in json format.
  optional string vmr_global_mean_filepath = 7;
}

message RadiativeTransfer {
  // The optics library that calculates optical depth, single-scattering albedo,
  // and other local optical properties of the layered atmosphere.
  optional OpticsParameters optics = 1;
  // Data about the prevalent atmospheric gases present in the atmosphere as
  // well as boundary conditions for the surface and top of atmosphere.
  optional AtmosphericState atmospheric_state = 2;
  // The time interval between updates of the radiative fluxes (in seconds).
  // Since the RRTMGP model is very computationally expensive, it is highly
  // recommended that the update cycle be no less than 10 minutes. However, too
  // long an update cycle can lead to instabilities (Pauluis and Emanuel 2004,
  // https://doi.org/10.1175/1520-0493(2004)132<0673:NIRFIC>2.0.CO;2).
  optional float update_cycle_seconds = 3 [default = 600.0];
  // Supercycling time interval between applying the radiative transfer model in
  // the energy equation (in seconds). When it is applied, its amplitude will be
  // scaled larger appropriately. This option exists because the radiation
  // update in the temperature equation can be too small relative to the
  // existing temperature and be lost to floating point truncation in single
  // precision. In practice, the supercycling time interval should be less
  // than or equal to `update_cycle_seconds`. Furthermore, the supercycling time
  // interval should be as small as possible, but large enough such that
  // floating point precision is not an issue. If this field is left empty, or
  // set to 0, we do no supercycling and apply the radiative heating at every
  // step.
  optional float apply_cadence_seconds = 4;
}
